{-
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
-}


main = print (fib 10)

-- Fibonacci naive
fib :: Int -> Int
fib 1 = 1
fib 2 = 1
fib x = fib (x-1) + fib (x-2)

-- Fibonacci elegant
fibs = 1 : 1 : zipWith (+) fibs (tail fibs)

-- Checks if given int is even
isEven :: Int -> Bool
isEven x = x `mod` 2 == 0

-- Calculates the sum of all even fibonacci numbers that are smaller than x (Here 4 000 000)
evenFibMaxSum :: Int -> Int
evenFibMaxSum x = sum (filter isEven (takeWhile (<x) fibs))
